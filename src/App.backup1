import React, { useState, useEffect } from "react";
import { BrowserRouter as Router, Routes, Route, Navigate } from "react-router-dom";
import LoginPage from "./pages/LoginPage";
import SignupPage from "./pages/SignupPage";
import DashboardPage from "./pages/DashboardPage";

const App = () => {
  const [user, setUser] = useState(null);

  // Login-Status aus localStorage laden
  useEffect(() => {
    console.debug("App initialisiert");
    const token = localStorage.getItem("token");
    const userId = localStorage.getItem("userId");
    const role = localStorage.getItem("role");

    console.log("LocalStorage geladen:", { token, userId, role });

    if (token && userId && role) {
      setUser({ userId, role });
    }
  }, []);

  const handleLogin = (userData) => {
    setUser(userData);
  };

  const handleLogout = () => {
    setUser(null);
    localStorage.removeItem("token");
    localStorage.removeItem("userId");
    localStorage.removeItem("role");
  };

  return (
    <Router>
      <Routes>
        {/* Login-Seite */}
        <Route
          path="/login"
          element={!user ? <LoginPage onLogin={handleLogin} /> : <Navigate to="/dashboard" />}
        />

        {/* Signup-Seite */}
        <Route
          path="/signup"
          element={!user ? <SignupPage /> : <Navigate to="/dashboard" />}
        />

        {/* Dashboard-Seite */}
        <Route
          path="/dashboard"
          element={user ? <DashboardPage user={user} onLogout={handleLogout} /> : <Navigate to="/login" />}
        />

        {/* Standardroute: Umleitung zur Login-Seite */}
        <Route path="*" element={<Navigate to="/login" />} />
      </Routes>
    </Router>
  );
};

const fetchUserData = async () => {
  try {
    const response = await axios.get("/api/auth/profile", {
      headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
    });
    setUser(response.data);
  } catch (error) {
    console.error("Fehler beim Abrufen der Benutzerinformationen:", error.response.data);
    if (error.response.data.message === "Ung√ºltiges Token") {
      localStorage.removeItem("token");
      alert("Deine Sitzung ist abgelaufen. Bitte logge dich erneut ein.");
      window.location.href = "/login"; // Leite auf die Login-Seite weiter
    }
  }
};

export default App;
